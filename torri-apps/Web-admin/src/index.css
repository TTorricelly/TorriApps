@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    font-family: 'Inter', 'Montserrat', 'Roboto', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* Custom component styles for modern dark theme */
@layer components {
  /* Primary Button Style */
  .btn-primary {
    @apply bg-accent-primary text-white font-medium px-l py-s rounded-button transition-all duration-fast hover:bg-opacity-90 focus:ring-2 focus:ring-accent-primary focus:ring-offset-2 focus:ring-offset-bg-primary shadow-button;
  }
  
  /* Secondary Button Style */
  .btn-secondary {
    @apply bg-transparent border border-accent-primary text-accent-primary font-medium px-l py-s rounded-button transition-all duration-fast hover:bg-accent-primary hover:text-white focus:ring-2 focus:ring-accent-primary focus:ring-offset-2 focus:ring-offset-bg-primary;
  }
  
  /* Input Field Style */
  .input-field {
    @apply bg-bg-input border border-bg-tertiary text-text-primary placeholder-text-secondary px-m py-s rounded-input transition-colors duration-fast focus:outline-none focus:ring-2 focus:ring-accent-primary focus:border-accent-primary;
  }
}

/* ========================================================================== */
/* Custom overrides for Material Tailwind Disabled Inputs in Dark Theme       */
/* ========================================================================== */

/*
  Targeting disabled Material Tailwind input fields.
  These selectors attempt to cover different ways the disabled state might be represented
  by the component library (e.g., data attributes, aria attributes, or classes on the input itself).
  Using #1A1A2E for bg-bg-primary (input background).
  Using #E0E0E0 for text-text-primary (input text).
  Using #2A2A4A for border-bg-tertiary (input border).
  Using #A0A0A0 for text-text-secondary (label text).
  Using #606060 for text-text-tertiary (placeholder text).
*/

/* General wrapper for disabled input - for the input element itself */
/* This targets the <input> tag directly when it's disabled or within a disabled MT wrapper. */
div[class*="mt-input"][data-disabled="true"] input,
div[class*="mt-input"][aria-disabled="true"] input,
input[class*="mt-input-"][disabled],
input.peer[disabled], /* Common class for MT's actual input elements */
input[data-testid*="input"][disabled] /* Fallback for test IDs if classes are obfuscated */
{
  background-color: #1A1A2E !important;
  color: #E0E0E0 !important;
  -webkit-text-fill-color: #E0E0E0 !important; /* Override for WebKit text color */
  border-color: #2A2A4A !important;
  opacity: 0.75 !important; /* Standard opacity for disabled, adjust if too faint */
}

/* Ensure the border of the wrapper also reflects disabled state if applicable */
/* This targets the div that often wraps the input and label. */
div[class*="mt-input"][data-disabled="true"],
div[class*="mt-input"][aria-disabled="true"] {
  border-color: #2A2A4A !important; /* Ensure wrapper border matches */
}

/* Styling for the label of a disabled input */
/* This targets the <label> element associated with a disabled MT input. */
div[class*="mt-input"][data-disabled="true"] label,
div[class*="mt-input"][aria-disabled="true"] label,
label[data-peer-disabled="true"] /* Common MT pattern for label styling based on peer input's state */
{
  color: #A0A0A0 !important; /* text-text-secondary for disabled label */
  opacity: 0.75 !important;
}

/* Remove any box-shadow or specific styling that might make it look raised or different on focus (even if disabled) */
div[class*="mt-input"][data-disabled="true"] input:focus,
input.peer[disabled]:focus {
  box-shadow: none !important;
  border-color: #2A2A4A !important; /* Keep border color consistent */
}

/* Ensure placeholder text is also styled correctly if visible in disabled state */
div[class*="mt-input"][data-disabled="true"] input::placeholder,
input.peer[disabled]::placeholder {
  color: #606060 !important; /* text-text-tertiary */
  -webkit-text-fill-color: #606060 !important;
  opacity: 0.75 !important;
}

/* RichTextEditor Content Styles (moved from ServiceForm.jsx) */
/* These styles apply to elements *within* the contenteditable area, or direct children if applicable */

.rich-text-display [contenteditable] h2,
.rich-text-display h2 { /* For cases where h2 might be a direct child */
  font-size: 1.5em;
  font-weight: 600;
  margin: 0.83em 0;
  color: #E0E0E0; /* text-text-primary */
}

.rich-text-display [contenteditable] h3,
.rich-text-display h3 {
  font-size: 1.17em;
  font-weight: 600;
  margin: 1em 0;
  color: #E0E0E0; /* text-text-primary */
}

.rich-text-display [contenteditable] p,
.rich-text-display p {
  margin: 0.5em 0;
  color: #E0E0E0; /* text-text-primary */
  line-height: 1.6;
}

.rich-text-display [contenteditable] strong,
.rich-text-display strong {
  font-weight: 600;
  /* Text color will be inherited, typically from the parent <p> or the .rich-text-display itself */
}

.rich-text-display [contenteditable] em,
.rich-text-display em {
  font-style: italic;
}

.rich-text-display [contenteditable] u,
.rich-text-display u {
  text-decoration: underline;
}

/* Ensure proper spacing for rich text content, if not already handled by Tailwind utilities */
.rich-text-display > *:first-child {
  margin-top: 0;
}

.rich-text-display > *:last-child {
  margin-bottom: 0;
}
