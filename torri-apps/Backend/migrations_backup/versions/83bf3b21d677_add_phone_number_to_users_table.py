"""add_phone_number_to_users_table

Revision ID: 83bf3b21d677
Revises: 0a118bc387cd
Create Date: 2025-06-10 21:10:11.748670

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '83bf3b21d677'
down_revision: Union[str, None] = '0a118bc387cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_categories',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('icon_path', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('CLIENTE', 'PROFISSIONAL', 'ATENDENTE', 'GESTOR', name='userrole'), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('photo_path', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('professional_availability',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('professional_user_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('day_of_week', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='dayofweek'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professional_user_id', 'day_of_week', 'start_time', 'end_time', name='uq_prof_avail_day_time_slot')
    )
    op.create_index(op.f('ix_professional_availability_professional_user_id'), 'professional_availability', ['professional_user_id'], unique=False)
    op.create_table('professional_blocked_time',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('professional_user_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('blocked_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('block_type', sa.String(length=20), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professional_user_id', 'blocked_date', 'start_time', 'end_time', 'block_type', name='uq_prof_blocked_date_slot_type')
    )
    op.create_index(op.f('ix_professional_blocked_time_professional_user_id'), 'professional_blocked_time', ['professional_user_id'], unique=False)
    op.create_table('professional_breaks',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('professional_user_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('tenant_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('day_of_week', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='dayofweek'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professional_user_id', 'day_of_week', 'start_time', 'end_time', name='uq_prof_break_day_time_slot')
    )
    op.create_index(op.f('ix_professional_breaks_professional_user_id'), 'professional_breaks', ['professional_user_id'], unique=False)
    op.create_index(op.f('ix_professional_breaks_tenant_id'), 'professional_breaks', ['tenant_id'], unique=False)
    op.create_table('services',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('commission_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('image_liso', sa.String(length=255), nullable=True),
    sa.Column('image_ondulado', sa.String(length=255), nullable=True),
    sa.Column('image_cacheado', sa.String(length=255), nullable=True),
    sa.Column('image_crespo', sa.String(length=255), nullable=True),
    sa.Column('category_id', mysql.CHAR(length=36), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['service_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_services_category_id'), 'services', ['category_id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('client_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('professional_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('service_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CONFIRMED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentstatus'), nullable=False),
    sa.Column('price_at_booking', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('paid_manually', sa.Boolean(), nullable=False),
    sa.Column('notes_by_client', sa.String(length=500), nullable=True),
    sa.Column('notes_by_professional', sa.String(length=500), nullable=True),
    sa.CheckConstraint('start_time < end_time', name='cc_appointment_start_before_end'),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_appointment_date'), 'appointments', ['appointment_date'], unique=False)
    op.create_index(op.f('ix_appointments_client_id'), 'appointments', ['client_id'], unique=False)
    op.create_index(op.f('ix_appointments_professional_id'), 'appointments', ['professional_id'], unique=False)
    op.create_index(op.f('ix_appointments_service_id'), 'appointments', ['service_id'], unique=False)
    op.create_index(op.f('ix_appointments_start_time'), 'appointments', ['start_time'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_table('service_professionals_association',
    sa.Column('service_id', mysql.CHAR(length=36), nullable=False),
    sa.Column('professional_user_id', mysql.CHAR(length=36), nullable=False),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_id', 'professional_user_id'),
    sa.UniqueConstraint('service_id', 'professional_user_id', name='uq_service_professional')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_professionals_association')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_start_time'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_service_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_professional_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_client_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_appointment_date'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_services_category_id'), table_name='services')
    op.drop_table('services')
    op.drop_index(op.f('ix_professional_breaks_tenant_id'), table_name='professional_breaks')
    op.drop_index(op.f('ix_professional_breaks_professional_user_id'), table_name='professional_breaks')
    op.drop_table('professional_breaks')
    op.drop_index(op.f('ix_professional_blocked_time_professional_user_id'), table_name='professional_blocked_time')
    op.drop_table('professional_blocked_time')
    op.drop_index(op.f('ix_professional_availability_professional_user_id'), table_name='professional_availability')
    op.drop_table('professional_availability')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('service_categories')
    # ### end Alembic commands ###
