"""create_fresh_schema_from_models

Revision ID: 1f06f512a137
Revises: b10d01ddce01
Create Date: 2025-07-04 17:51:20.808951

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1f06f512a137'
down_revision: Union[str, None] = 'b10d01ddce01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('data_type', sa.Enum('string', 'integer', 'boolean', 'decimal', name='setting_data_type'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_app_settings_key'), 'app_settings', ['key'], unique=True)
    op.create_table('labels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_labels_created_at'), 'labels', ['created_at'], unique=False)
    op.create_index(op.f('ix_labels_is_active'), 'labels', ['is_active'], unique=False)
    op.create_index(op.f('ix_labels_name'), 'labels', ['name'], unique=True)
    op.create_table('service_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('icon_path', sa.String(length=255), nullable=True),
    sa.Column('tenant_id', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('station_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_station_types_code'), 'station_types', ['code'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('CLIENTE', 'PROFISSIONAL', 'ATENDENTE', 'GESTOR', name='userrole'), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('nickname', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=50), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MASCULINO', 'FEMININO', 'OUTROS', name='gender'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('photo_path', sa.String(length=500), nullable=True),
    sa.Column('cpf', sa.String(length=14), nullable=True),
    sa.Column('address_street', sa.String(length=255), nullable=True),
    sa.Column('address_number', sa.String(length=20), nullable=True),
    sa.Column('address_complement', sa.String(length=100), nullable=True),
    sa.Column('address_neighborhood', sa.String(length=100), nullable=True),
    sa.Column('address_city', sa.String(length=100), nullable=True),
    sa.Column('address_state', sa.String(length=2), nullable=True),
    sa.Column('address_cep', sa.String(length=9), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_cpf'), 'users', ['cpf'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('appointment_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('total_duration_minutes', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CONFIRMED', 'WALK_IN', 'ARRIVED', 'IN_SERVICE', 'READY_TO_PAY', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentgroupstatus'), nullable=False),
    sa.Column('notes_by_client', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointment_groups_client_id'), 'appointment_groups', ['client_id'], unique=False)
    op.create_index(op.f('ix_appointment_groups_start_time'), 'appointment_groups', ['start_time'], unique=False)
    op.create_index(op.f('ix_appointment_groups_status'), 'appointment_groups', ['status'], unique=False)
    op.create_table('commission_payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('professional_id', sa.UUID(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'PIX', 'BANK_TRANSFER', 'CARD', 'OTHER', name='commissionpaymentmethod'), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('receipt_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('total_amount > 0', name='chk_payment_amount_positive'),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commission_payments_payment_date'), 'commission_payments', ['payment_date'], unique=False)
    op.create_index(op.f('ix_commission_payments_professional_id'), 'commission_payments', ['professional_id'], unique=False)
    op.create_table('professional_availability',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('professional_user_id', sa.UUID(), nullable=False),
    sa.Column('day_of_week', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='dayofweek'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professional_user_id', 'day_of_week', 'start_time', 'end_time', name='uq_prof_avail_day_time_slot')
    )
    op.create_index(op.f('ix_professional_availability_professional_user_id'), 'professional_availability', ['professional_user_id'], unique=False)
    op.create_table('professional_blocked_time',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('professional_user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.String(length=36), nullable=True),
    sa.Column('blocked_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('block_type', sa.String(length=10), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professional_user_id', 'blocked_date', 'start_time', 'end_time', 'block_type', name='uq_prof_blocked_date_slot_type')
    )
    op.create_index(op.f('ix_professional_blocked_time_professional_user_id'), 'professional_blocked_time', ['professional_user_id'], unique=False)
    op.create_table('professional_breaks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('professional_user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('day_of_week', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='dayofweek'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('professional_user_id', 'day_of_week', 'start_time', 'end_time', name='uq_prof_break_day_time_slot')
    )
    op.create_index(op.f('ix_professional_breaks_professional_user_id'), 'professional_breaks', ['professional_user_id'], unique=False)
    op.create_index(op.f('ix_professional_breaks_tenant_id'), 'professional_breaks', ['tenant_id'], unique=False)
    op.create_table('services',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('service_sku', sa.String(length=10), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('commission_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('parallelable', sa.Boolean(), nullable=False),
    sa.Column('max_parallel_pros', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['service_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_sku')
    )
    op.create_index(op.f('ix_services_category_id'), 'services', ['category_id'], unique=False)
    op.create_table('stations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['station_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_labels',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('label_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['label_id'], ['labels.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'label_id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.Column('professional_id', sa.UUID(), nullable=True),
    sa.Column('service_id', sa.UUID(), nullable=True),
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CONFIRMED', 'WALK_IN', 'ARRIVED', 'IN_SERVICE', 'READY_TO_PAY', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentstatus'), nullable=True),
    sa.Column('price_at_booking', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('paid_manually', sa.Boolean(), nullable=True),
    sa.Column('notes_by_client', sa.Text(), nullable=True),
    sa.Column('notes_by_professional', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('start_time < end_time', name='cc_appointment_start_before_end'),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['appointment_groups.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_appointment_date'), 'appointments', ['appointment_date'], unique=False)
    op.create_index(op.f('ix_appointments_client_id'), 'appointments', ['client_id'], unique=False)
    op.create_index(op.f('ix_appointments_group_id'), 'appointments', ['group_id'], unique=False)
    op.create_index(op.f('ix_appointments_professional_id'), 'appointments', ['professional_id'], unique=False)
    op.create_index(op.f('ix_appointments_service_id'), 'appointments', ['service_id'], unique=False)
    op.create_index(op.f('ix_appointments_start_time'), 'appointments', ['start_time'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_table('service_images',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('alt_text', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_service_images_created_at', 'service_images', ['created_at'], unique=False)
    op.create_index('idx_service_images_is_primary', 'service_images', ['is_primary'], unique=False)
    op.create_index('idx_service_images_service_id_display_order', 'service_images', ['service_id', 'display_order'], unique=False)
    op.create_index(op.f('ix_service_images_created_at'), 'service_images', ['created_at'], unique=False)
    op.create_index(op.f('ix_service_images_display_order'), 'service_images', ['display_order'], unique=False)
    op.create_index(op.f('ix_service_images_is_primary'), 'service_images', ['is_primary'], unique=False)
    op.create_index(op.f('ix_service_images_service_id'), 'service_images', ['service_id'], unique=False)
    op.create_table('service_professionals_association',
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('professional_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['professional_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_id', 'professional_user_id'),
    sa.UniqueConstraint('service_id', 'professional_user_id', name='uq_service_professional')
    )
    op.create_table('service_station_requirements',
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('station_type_id', sa.UUID(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['station_type_id'], ['station_types.id'], ),
    sa.PrimaryKeyConstraint('service_id', 'station_type_id')
    )
    op.create_table('commissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('professional_id', sa.UUID(), nullable=False),
    sa.Column('appointment_id', sa.UUID(), nullable=False),
    sa.Column('service_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('commission_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('calculated_value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('adjusted_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('adjustment_reason', sa.Text(), nullable=True),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'REVERSED', name='commissionpaymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('adjusted_value IS NULL OR adjusted_value >= 0', name='chk_adjusted_positive'),
    sa.CheckConstraint('calculated_value >= 0', name='chk_commission_positive'),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['professional_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('appointment_id', name='uq_commission_appointment')
    )
    op.create_index(op.f('ix_commissions_payment_status'), 'commissions', ['payment_status'], unique=False)
    op.create_index(op.f('ix_commissions_professional_id'), 'commissions', ['professional_id'], unique=False)
    op.create_table('service_image_labels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=False),
    sa.Column('label_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['service_images.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['label_id'], ['labels.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('image_id', 'label_id', name='uq_service_image_label')
    )
    op.create_index('idx_service_image_labels_image_id', 'service_image_labels', ['image_id'], unique=False)
    op.create_index('idx_service_image_labels_label_id', 'service_image_labels', ['label_id'], unique=False)
    op.create_index(op.f('ix_service_image_labels_image_id'), 'service_image_labels', ['image_id'], unique=False)
    op.create_index(op.f('ix_service_image_labels_label_id'), 'service_image_labels', ['label_id'], unique=False)
    op.create_table('commission_payment_items',
    sa.Column('payment_id', sa.UUID(), nullable=False),
    sa.Column('commission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['commission_id'], ['commissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['payment_id'], ['commission_payments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_id', 'commission_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commission_payment_items')
    op.drop_index(op.f('ix_service_image_labels_label_id'), table_name='service_image_labels')
    op.drop_index(op.f('ix_service_image_labels_image_id'), table_name='service_image_labels')
    op.drop_index('idx_service_image_labels_label_id', table_name='service_image_labels')
    op.drop_index('idx_service_image_labels_image_id', table_name='service_image_labels')
    op.drop_table('service_image_labels')
    op.drop_index(op.f('ix_commissions_professional_id'), table_name='commissions')
    op.drop_index(op.f('ix_commissions_payment_status'), table_name='commissions')
    op.drop_table('commissions')
    op.drop_table('service_station_requirements')
    op.drop_table('service_professionals_association')
    op.drop_index(op.f('ix_service_images_service_id'), table_name='service_images')
    op.drop_index(op.f('ix_service_images_is_primary'), table_name='service_images')
    op.drop_index(op.f('ix_service_images_display_order'), table_name='service_images')
    op.drop_index(op.f('ix_service_images_created_at'), table_name='service_images')
    op.drop_index('idx_service_images_service_id_display_order', table_name='service_images')
    op.drop_index('idx_service_images_is_primary', table_name='service_images')
    op.drop_index('idx_service_images_created_at', table_name='service_images')
    op.drop_table('service_images')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_start_time'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_service_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_professional_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_group_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_client_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_appointment_date'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_table('user_labels')
    op.drop_table('stations')
    op.drop_index(op.f('ix_services_category_id'), table_name='services')
    op.drop_table('services')
    op.drop_index(op.f('ix_professional_breaks_tenant_id'), table_name='professional_breaks')
    op.drop_index(op.f('ix_professional_breaks_professional_user_id'), table_name='professional_breaks')
    op.drop_table('professional_breaks')
    op.drop_index(op.f('ix_professional_blocked_time_professional_user_id'), table_name='professional_blocked_time')
    op.drop_table('professional_blocked_time')
    op.drop_index(op.f('ix_professional_availability_professional_user_id'), table_name='professional_availability')
    op.drop_table('professional_availability')
    op.drop_index(op.f('ix_commission_payments_professional_id'), table_name='commission_payments')
    op.drop_index(op.f('ix_commission_payments_payment_date'), table_name='commission_payments')
    op.drop_table('commission_payments')
    op.drop_index(op.f('ix_appointment_groups_status'), table_name='appointment_groups')
    op.drop_index(op.f('ix_appointment_groups_start_time'), table_name='appointment_groups')
    op.drop_index(op.f('ix_appointment_groups_client_id'), table_name='appointment_groups')
    op.drop_table('appointment_groups')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_cpf'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_station_types_code'), table_name='station_types')
    op.drop_table('station_types')
    op.drop_table('service_categories')
    op.drop_index(op.f('ix_labels_name'), table_name='labels')
    op.drop_index(op.f('ix_labels_is_active'), table_name='labels')
    op.drop_index(op.f('ix_labels_created_at'), table_name='labels')
    op.drop_table('labels')
    op.drop_index(op.f('ix_app_settings_key'), table_name='app_settings')
    op.drop_table('app_settings')
    # ### end Alembic commands ###
